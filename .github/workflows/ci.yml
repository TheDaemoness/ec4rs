name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    name: MSRV Library Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
          - build: linux
            os: ubuntu-latest
          - build: windows
            os: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install MSRV Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.56.0
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Unit Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
      - name: Check Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
      - name: Check Docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: "--no-deps"
      - name: Check Style
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: "--check"
  compliance:
    name: Binary Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: "-p ec4rs_tools"
      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v1.12
      - name: Core Tests
        shell: bash
        run: |
          cmake -DEDITORCONFIG_CMD="$PWD/target/debug/ec4rs-parse" tests
          ctest --target-dir tests
